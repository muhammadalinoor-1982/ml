{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNqmLeKSlQKKEtj1Fvw0qa2"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":2,"metadata":{"id":"xdkj1lhqBEAW","executionInfo":{"status":"ok","timestamp":1708021802957,"user_tz":-360,"elapsed":14,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}}},"outputs":[],"source":["import numpy as np\n","import pandas as pd"]},{"cell_type":"code","source":["from google.colab import files\n","access_csv = files.upload()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":73},"id":"tijJagEwCGBi","executionInfo":{"status":"ok","timestamp":1708021896455,"user_tz":-360,"elapsed":33336,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"54025b82-7647-4d5d-bb49-01d4563277cc"},"execution_count":3,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","     <input type=\"file\" id=\"files-e8663fb9-c791-40f0-b7eb-d4948192a4ab\" name=\"files[]\" multiple disabled\n","        style=\"border:none\" />\n","     <output id=\"result-e8663fb9-c791-40f0-b7eb-d4948192a4ab\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script>// Copyright 2017 Google LLC\n","//\n","// Licensed under the Apache License, Version 2.0 (the \"License\");\n","// you may not use this file except in compliance with the License.\n","// You may obtain a copy of the License at\n","//\n","//      http://www.apache.org/licenses/LICENSE-2.0\n","//\n","// Unless required by applicable law or agreed to in writing, software\n","// distributed under the License is distributed on an \"AS IS\" BASIS,\n","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n","// See the License for the specific language governing permissions and\n","// limitations under the License.\n","\n","/**\n"," * @fileoverview Helpers for google.colab Python module.\n"," */\n","(function(scope) {\n","function span(text, styleAttributes = {}) {\n","  const element = document.createElement('span');\n","  element.textContent = text;\n","  for (const key of Object.keys(styleAttributes)) {\n","    element.style[key] = styleAttributes[key];\n","  }\n","  return element;\n","}\n","\n","// Max number of bytes which will be uploaded at a time.\n","const MAX_PAYLOAD_SIZE = 100 * 1024;\n","\n","function _uploadFiles(inputId, outputId) {\n","  const steps = uploadFilesStep(inputId, outputId);\n","  const outputElement = document.getElementById(outputId);\n","  // Cache steps on the outputElement to make it available for the next call\n","  // to uploadFilesContinue from Python.\n","  outputElement.steps = steps;\n","\n","  return _uploadFilesContinue(outputId);\n","}\n","\n","// This is roughly an async generator (not supported in the browser yet),\n","// where there are multiple asynchronous steps and the Python side is going\n","// to poll for completion of each step.\n","// This uses a Promise to block the python side on completion of each step,\n","// then passes the result of the previous step as the input to the next step.\n","function _uploadFilesContinue(outputId) {\n","  const outputElement = document.getElementById(outputId);\n","  const steps = outputElement.steps;\n","\n","  const next = steps.next(outputElement.lastPromiseValue);\n","  return Promise.resolve(next.value.promise).then((value) => {\n","    // Cache the last promise value to make it available to the next\n","    // step of the generator.\n","    outputElement.lastPromiseValue = value;\n","    return next.value.response;\n","  });\n","}\n","\n","/**\n"," * Generator function which is called between each async step of the upload\n"," * process.\n"," * @param {string} inputId Element ID of the input file picker element.\n"," * @param {string} outputId Element ID of the output display.\n"," * @return {!Iterable<!Object>} Iterable of next steps.\n"," */\n","function* uploadFilesStep(inputId, outputId) {\n","  const inputElement = document.getElementById(inputId);\n","  inputElement.disabled = false;\n","\n","  const outputElement = document.getElementById(outputId);\n","  outputElement.innerHTML = '';\n","\n","  const pickedPromise = new Promise((resolve) => {\n","    inputElement.addEventListener('change', (e) => {\n","      resolve(e.target.files);\n","    });\n","  });\n","\n","  const cancel = document.createElement('button');\n","  inputElement.parentElement.appendChild(cancel);\n","  cancel.textContent = 'Cancel upload';\n","  const cancelPromise = new Promise((resolve) => {\n","    cancel.onclick = () => {\n","      resolve(null);\n","    };\n","  });\n","\n","  // Wait for the user to pick the files.\n","  const files = yield {\n","    promise: Promise.race([pickedPromise, cancelPromise]),\n","    response: {\n","      action: 'starting',\n","    }\n","  };\n","\n","  cancel.remove();\n","\n","  // Disable the input element since further picks are not allowed.\n","  inputElement.disabled = true;\n","\n","  if (!files) {\n","    return {\n","      response: {\n","        action: 'complete',\n","      }\n","    };\n","  }\n","\n","  for (const file of files) {\n","    const li = document.createElement('li');\n","    li.append(span(file.name, {fontWeight: 'bold'}));\n","    li.append(span(\n","        `(${file.type || 'n/a'}) - ${file.size} bytes, ` +\n","        `last modified: ${\n","            file.lastModifiedDate ? file.lastModifiedDate.toLocaleDateString() :\n","                                    'n/a'} - `));\n","    const percent = span('0% done');\n","    li.appendChild(percent);\n","\n","    outputElement.appendChild(li);\n","\n","    const fileDataPromise = new Promise((resolve) => {\n","      const reader = new FileReader();\n","      reader.onload = (e) => {\n","        resolve(e.target.result);\n","      };\n","      reader.readAsArrayBuffer(file);\n","    });\n","    // Wait for the data to be ready.\n","    let fileData = yield {\n","      promise: fileDataPromise,\n","      response: {\n","        action: 'continue',\n","      }\n","    };\n","\n","    // Use a chunked sending to avoid message size limits. See b/62115660.\n","    let position = 0;\n","    do {\n","      const length = Math.min(fileData.byteLength - position, MAX_PAYLOAD_SIZE);\n","      const chunk = new Uint8Array(fileData, position, length);\n","      position += length;\n","\n","      const base64 = btoa(String.fromCharCode.apply(null, chunk));\n","      yield {\n","        response: {\n","          action: 'append',\n","          file: file.name,\n","          data: base64,\n","        },\n","      };\n","\n","      let percentDone = fileData.byteLength === 0 ?\n","          100 :\n","          Math.round((position / fileData.byteLength) * 100);\n","      percent.textContent = `${percentDone}% done`;\n","\n","    } while (position < fileData.byteLength);\n","  }\n","\n","  // All done.\n","  yield {\n","    response: {\n","      action: 'complete',\n","    }\n","  };\n","}\n","\n","scope.google = scope.google || {};\n","scope.google.colab = scope.google.colab || {};\n","scope.google.colab._files = {\n","  _uploadFiles,\n","  _uploadFilesContinue,\n","};\n","})(self);\n","</script> "]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Saving Churn_Modelling_preprocessing.csv to Churn_Modelling_preprocessing.csv\n"]}]},{"cell_type":"code","source":["df = pd.read_csv('Churn_Modelling_preprocessing.csv')\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"egVB-W-iCUrj","executionInfo":{"status":"ok","timestamp":1708022670825,"user_tz":-360,"elapsed":16,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"ea61a9de-027b-4b34-ef56-367a03c9b316"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      CreditScore  Age  Tenure    Balance  NumOfProducts  HasCrCard  \\\n","0             619   42       2       0.00              1          1   \n","1             608   41       1   83807.86              1          0   \n","2             502   42       8  159660.80              3          1   \n","3             699   39       1       0.00              2          0   \n","4             850   43       2  125510.82              1          1   \n","...           ...  ...     ...        ...            ...        ...   \n","9995          771   39       5       0.00              2          1   \n","9996          516   35      10   57369.61              1          1   \n","9997          709   36       7       0.00              1          0   \n","9998          772   42       3   75075.31              2          1   \n","9999          792   28       4  130142.79              1          1   \n","\n","      IsActiveMember  EstimatedSalary  Exited  Germany  Spain  Male  \n","0                  1        101348.88       1        0      0     0  \n","1                  1        112542.58       0        0      1     0  \n","2                  0        113931.57       1        0      0     0  \n","3                  0         93826.63       0        0      0     0  \n","4                  1         79084.10       0        0      1     0  \n","...              ...              ...     ...      ...    ...   ...  \n","9995               0         96270.64       0        0      0     1  \n","9996               1        101699.77       0        0      0     1  \n","9997               1         42085.58       1        0      0     0  \n","9998               0         92888.52       1        1      0     1  \n","9999               0         38190.78       0        0      0     0  \n","\n","[10000 rows x 12 columns]"],"text/html":["\n","  <div id=\"df-168c9cab-45e1-4af2-9134-c60d47066b6f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CreditScore</th>\n","      <th>Age</th>\n","      <th>Tenure</th>\n","      <th>Balance</th>\n","      <th>NumOfProducts</th>\n","      <th>HasCrCard</th>\n","      <th>IsActiveMember</th>\n","      <th>EstimatedSalary</th>\n","      <th>Exited</th>\n","      <th>Germany</th>\n","      <th>Spain</th>\n","      <th>Male</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>619</td>\n","      <td>42</td>\n","      <td>2</td>\n","      <td>0.00</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>101348.88</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>608</td>\n","      <td>41</td>\n","      <td>1</td>\n","      <td>83807.86</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>112542.58</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>502</td>\n","      <td>42</td>\n","      <td>8</td>\n","      <td>159660.80</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>113931.57</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>699</td>\n","      <td>39</td>\n","      <td>1</td>\n","      <td>0.00</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>93826.63</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>850</td>\n","      <td>43</td>\n","      <td>2</td>\n","      <td>125510.82</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>79084.10</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>9995</th>\n","      <td>771</td>\n","      <td>39</td>\n","      <td>5</td>\n","      <td>0.00</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>96270.64</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>9996</th>\n","      <td>516</td>\n","      <td>35</td>\n","      <td>10</td>\n","      <td>57369.61</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>101699.77</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>9997</th>\n","      <td>709</td>\n","      <td>36</td>\n","      <td>7</td>\n","      <td>0.00</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>42085.58</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>9998</th>\n","      <td>772</td>\n","      <td>42</td>\n","      <td>3</td>\n","      <td>75075.31</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>92888.52</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>9999</th>\n","      <td>792</td>\n","      <td>28</td>\n","      <td>4</td>\n","      <td>130142.79</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>38190.78</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>10000 rows × 12 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-168c9cab-45e1-4af2-9134-c60d47066b6f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-168c9cab-45e1-4af2-9134-c60d47066b6f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-168c9cab-45e1-4af2-9134-c60d47066b6f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-2df8d1e0-464f-4feb-9f92-cd285abcc93f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2df8d1e0-464f-4feb-9f92-cd285abcc93f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-2df8d1e0-464f-4feb-9f92-cd285abcc93f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_20954810-0ac4-4321-be04-58132a6b0439\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_20954810-0ac4-4321-be04-58132a6b0439 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 10000,\n  \"fields\": [\n    {\n      \"column\": \"CreditScore\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 96,\n        \"min\": 350,\n        \"max\": 850,\n        \"samples\": [\n          754,\n          533,\n          744\n        ],\n        \"num_unique_values\": 460,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10,\n        \"min\": 18,\n        \"max\": 92,\n        \"samples\": [\n          61,\n          42,\n          59\n        ],\n        \"num_unique_values\": 70,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Tenure\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 0,\n        \"max\": 10,\n        \"samples\": [\n          6,\n          2,\n          9\n        ],\n        \"num_unique_values\": 11,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Balance\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 62397.405202385955,\n        \"min\": 0.0,\n        \"max\": 250898.09,\n        \"samples\": [\n          117707.18,\n          133050.97,\n          124271.26\n        ],\n        \"num_unique_values\": 6382,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"NumOfProducts\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 4,\n        \"samples\": [\n          3,\n          4,\n          1\n        ],\n        \"num_unique_values\": 4,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"HasCrCard\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"num_unique_values\": 2,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"IsActiveMember\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"num_unique_values\": 2,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"EstimatedSalary\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 57510.49281769816,\n        \"min\": 11.58,\n        \"max\": 199992.48,\n        \"samples\": [\n          100809.99,\n          95273.73\n        ],\n        \"num_unique_values\": 9999,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Exited\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"num_unique_values\": 2,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Germany\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"num_unique_values\": 2,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Spain\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"num_unique_values\": 2,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Male\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"num_unique_values\": 2,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PmfjXW3RFZ5_","executionInfo":{"status":"ok","timestamp":1708022692461,"user_tz":-360,"elapsed":515,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"dcbd704e-4fd0-43de-f196-b383ff7e573a"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(10000, 12)"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qcIX0A5jFfSn","executionInfo":{"status":"ok","timestamp":1708022916349,"user_tz":-360,"elapsed":31,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"6c353275-41ec-4289-d2fd-2442dacb2605"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 10000 entries, 0 to 9999\n","Data columns (total 12 columns):\n"," #   Column           Non-Null Count  Dtype  \n","---  ------           --------------  -----  \n"," 0   CreditScore      10000 non-null  int64  \n"," 1   Age              10000 non-null  int64  \n"," 2   Tenure           10000 non-null  int64  \n"," 3   Balance          10000 non-null  float64\n"," 4   NumOfProducts    10000 non-null  int64  \n"," 5   HasCrCard        10000 non-null  int64  \n"," 6   IsActiveMember   10000 non-null  int64  \n"," 7   EstimatedSalary  10000 non-null  float64\n"," 8   Exited           10000 non-null  int64  \n"," 9   Germany          10000 non-null  int64  \n"," 10  Spain            10000 non-null  int64  \n"," 11  Male             10000 non-null  int64  \n","dtypes: float64(2), int64(10)\n","memory usage: 937.6 KB\n"]}]},{"cell_type":"code","source":["df.duplicated().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9hU_8PtYGVeg","executionInfo":{"status":"ok","timestamp":1708022939851,"user_tz":-360,"elapsed":10,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"e55457ca-f94d-4bdc-b7d5-9e0e686c0913"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["X = df.drop(columns=['Exited'])\n","y = df['Exited']"],"metadata":{"id":"k3Mk44XrGboq","executionInfo":{"status":"ok","timestamp":1708023457379,"user_tz":-360,"elapsed":3,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","X_train,X_test,y_train,y_test = train_test_split(X, y, test_size=0.2, random_state=1)"],"metadata":{"id":"4GHYc7gBIaBw","executionInfo":{"status":"ok","timestamp":1708024150168,"user_tz":-360,"elapsed":668,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}}},"execution_count":16,"outputs":[]},{"cell_type":"code","source":["X.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Jt8CXJNcLDBK","executionInfo":{"status":"ok","timestamp":1708024250800,"user_tz":-360,"elapsed":8,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"bc0476b1-82da-4d23-8c45-0623a2bcef91"},"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(10000, 11)"]},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["from sklearn.preprocessing import StandardScaler\n","scaler = StandardScaler()"],"metadata":{"id":"iGczdnj7LbzA","executionInfo":{"status":"ok","timestamp":1708024431444,"user_tz":-360,"elapsed":5,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}}},"execution_count":24,"outputs":[]},{"cell_type":"code","source":["X_train_scaled = scaler.fit_transform(X_train)\n","X_test_scaled = scaler.transform(X_test)"],"metadata":{"id":"HL09QNVyMHzl","executionInfo":{"status":"ok","timestamp":1708024632229,"user_tz":-360,"elapsed":4,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}}},"execution_count":26,"outputs":[]},{"cell_type":"code","source":["X_train_scaled"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7L1OJbczM41v","executionInfo":{"status":"ok","timestamp":1708024700103,"user_tz":-360,"elapsed":686,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"6c9fbbe2-8291-450f-aedf-c8e9d8d55a17"},"execution_count":28,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[-0.23082038, -0.94449979, -0.70174202, ...,  1.71490137,\n","        -0.57273139,  0.91509065],\n","       [-0.25150912, -0.94449979, -0.35520275, ..., -0.58312392,\n","        -0.57273139, -1.09278791],\n","       [-0.3963303 ,  0.77498705,  0.33787579, ...,  1.71490137,\n","        -0.57273139, -1.09278791],\n","       ...,\n","       [ 0.22433188,  0.58393295,  1.3774936 , ..., -0.58312392,\n","        -0.57273139, -1.09278791],\n","       [ 0.13123255,  0.01077067,  1.03095433, ..., -0.58312392,\n","        -0.57273139, -1.09278791],\n","       [ 1.1656695 ,  0.29735181,  0.33787579, ...,  1.71490137,\n","        -0.57273139,  0.91509065]])"]},"metadata":{},"execution_count":28}]},{"cell_type":"code","source":["import tensorflow\n","from tensorflow import keras\n","from tensorflow.keras import Sequential\n","from tensorflow.keras.layers import Dense"],"metadata":{"id":"T80ho7IiNJU0","executionInfo":{"status":"ok","timestamp":1708024880963,"user_tz":-360,"elapsed":592,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}}},"execution_count":30,"outputs":[]},{"cell_type":"code","source":["model = Sequential()\n","\n","model.add(Dense(11, activation='relu', input_dim=11))\n","model.add(Dense(11, activation='relu'))\n","model.add(Dense(1, activation='sigmoid'))"],"metadata":{"id":"Hib5GJbGN1lN","executionInfo":{"status":"ok","timestamp":1708026681904,"user_tz":-360,"elapsed":563,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}}},"execution_count":53,"outputs":[]},{"cell_type":"code","source":["model.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"C4dsCPk4PAL4","executionInfo":{"status":"ok","timestamp":1708026750397,"user_tz":-360,"elapsed":559,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"76f45588-5ee1-48be-f224-2beb3791befe"},"execution_count":54,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_3\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," dense_4 (Dense)             (None, 11)                132       \n","                                                                 \n"," dense_5 (Dense)             (None, 11)                132       \n","                                                                 \n"," dense_6 (Dense)             (None, 1)                 12        \n","                                                                 \n","=================================================================\n","Total params: 276 (1.08 KB)\n","Trainable params: 276 (1.08 KB)\n","Non-trainable params: 0 (0.00 Byte)\n","_________________________________________________________________\n"]}]},{"cell_type":"code","source":["model.compile(loss='binary_crossentropy', optimizer='Adam', metrics=['accuracy'])"],"metadata":{"id":"AEVwaCtOPpqn","executionInfo":{"status":"ok","timestamp":1708026867428,"user_tz":-360,"elapsed":502,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}}},"execution_count":57,"outputs":[]},{"cell_type":"code","source":["history = model.fit(X_train_scaled, y_train, epochs=100, validation_split=0.2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kxRopeisQM1X","executionInfo":{"status":"ok","timestamp":1708027428073,"user_tz":-360,"elapsed":82814,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"d01eaca3-cde4-442f-be25-c9561f0ac02e"},"execution_count":68,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/100\n","200/200 [==============================] - 1s 4ms/step - loss: 0.3068 - accuracy: 0.8748 - val_loss: 0.3287 - val_accuracy: 0.8675\n","Epoch 2/100\n","200/200 [==============================] - 1s 3ms/step - loss: 0.3073 - accuracy: 0.8737 - val_loss: 0.3294 - val_accuracy: 0.8669\n","Epoch 3/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3068 - accuracy: 0.8737 - val_loss: 0.3307 - val_accuracy: 0.8644\n","Epoch 4/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3079 - accuracy: 0.8731 - val_loss: 0.3318 - val_accuracy: 0.8662\n","Epoch 5/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3073 - accuracy: 0.8730 - val_loss: 0.3297 - val_accuracy: 0.8675\n","Epoch 6/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3067 - accuracy: 0.8734 - val_loss: 0.3309 - val_accuracy: 0.8650\n","Epoch 7/100\n","200/200 [==============================] - 1s 3ms/step - loss: 0.3070 - accuracy: 0.8736 - val_loss: 0.3292 - val_accuracy: 0.8650\n","Epoch 8/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3074 - accuracy: 0.8728 - val_loss: 0.3308 - val_accuracy: 0.8637\n","Epoch 9/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3070 - accuracy: 0.8737 - val_loss: 0.3331 - val_accuracy: 0.8644\n","Epoch 10/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3072 - accuracy: 0.8745 - val_loss: 0.3297 - val_accuracy: 0.8644\n","Epoch 11/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3068 - accuracy: 0.8725 - val_loss: 0.3314 - val_accuracy: 0.8637\n","Epoch 12/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3068 - accuracy: 0.8730 - val_loss: 0.3298 - val_accuracy: 0.8656\n","Epoch 13/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3070 - accuracy: 0.8730 - val_loss: 0.3296 - val_accuracy: 0.8650\n","Epoch 14/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3071 - accuracy: 0.8733 - val_loss: 0.3298 - val_accuracy: 0.8644\n","Epoch 15/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3073 - accuracy: 0.8741 - val_loss: 0.3317 - val_accuracy: 0.8637\n","Epoch 16/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3066 - accuracy: 0.8736 - val_loss: 0.3321 - val_accuracy: 0.8612\n","Epoch 17/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3066 - accuracy: 0.8747 - val_loss: 0.3307 - val_accuracy: 0.8637\n","Epoch 18/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3074 - accuracy: 0.8730 - val_loss: 0.3288 - val_accuracy: 0.8675\n","Epoch 19/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3068 - accuracy: 0.8741 - val_loss: 0.3306 - val_accuracy: 0.8625\n","Epoch 20/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3072 - accuracy: 0.8719 - val_loss: 0.3308 - val_accuracy: 0.8656\n","Epoch 21/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3072 - accuracy: 0.8728 - val_loss: 0.3298 - val_accuracy: 0.8687\n","Epoch 22/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3062 - accuracy: 0.8739 - val_loss: 0.3313 - val_accuracy: 0.8644\n","Epoch 23/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3068 - accuracy: 0.8741 - val_loss: 0.3301 - val_accuracy: 0.8650\n","Epoch 24/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3068 - accuracy: 0.8737 - val_loss: 0.3289 - val_accuracy: 0.8662\n","Epoch 25/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3066 - accuracy: 0.8728 - val_loss: 0.3298 - val_accuracy: 0.8637\n","Epoch 26/100\n","200/200 [==============================] - 1s 3ms/step - loss: 0.3065 - accuracy: 0.8752 - val_loss: 0.3293 - val_accuracy: 0.8669\n","Epoch 27/100\n","200/200 [==============================] - 1s 3ms/step - loss: 0.3064 - accuracy: 0.8741 - val_loss: 0.3306 - val_accuracy: 0.8650\n","Epoch 28/100\n","200/200 [==============================] - 1s 3ms/step - loss: 0.3064 - accuracy: 0.8741 - val_loss: 0.3299 - val_accuracy: 0.8637\n","Epoch 29/100\n","200/200 [==============================] - 1s 4ms/step - loss: 0.3065 - accuracy: 0.8731 - val_loss: 0.3303 - val_accuracy: 0.8656\n","Epoch 30/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3063 - accuracy: 0.8739 - val_loss: 0.3297 - val_accuracy: 0.8669\n","Epoch 31/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3061 - accuracy: 0.8730 - val_loss: 0.3317 - val_accuracy: 0.8656\n","Epoch 32/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3067 - accuracy: 0.8748 - val_loss: 0.3297 - val_accuracy: 0.8644\n","Epoch 33/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3067 - accuracy: 0.8744 - val_loss: 0.3302 - val_accuracy: 0.8650\n","Epoch 34/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3061 - accuracy: 0.8739 - val_loss: 0.3304 - val_accuracy: 0.8644\n","Epoch 35/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3062 - accuracy: 0.8742 - val_loss: 0.3317 - val_accuracy: 0.8644\n","Epoch 36/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3060 - accuracy: 0.8744 - val_loss: 0.3325 - val_accuracy: 0.8644\n","Epoch 37/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3064 - accuracy: 0.8742 - val_loss: 0.3317 - val_accuracy: 0.8637\n","Epoch 38/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3059 - accuracy: 0.8748 - val_loss: 0.3303 - val_accuracy: 0.8656\n","Epoch 39/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3061 - accuracy: 0.8747 - val_loss: 0.3333 - val_accuracy: 0.8612\n","Epoch 40/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3060 - accuracy: 0.8727 - val_loss: 0.3324 - val_accuracy: 0.8594\n","Epoch 41/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3061 - accuracy: 0.8731 - val_loss: 0.3306 - val_accuracy: 0.8644\n","Epoch 42/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3062 - accuracy: 0.8736 - val_loss: 0.3305 - val_accuracy: 0.8656\n","Epoch 43/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3065 - accuracy: 0.8733 - val_loss: 0.3313 - val_accuracy: 0.8656\n","Epoch 44/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3058 - accuracy: 0.8737 - val_loss: 0.3330 - val_accuracy: 0.8662\n","Epoch 45/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3062 - accuracy: 0.8747 - val_loss: 0.3317 - val_accuracy: 0.8631\n","Epoch 46/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3054 - accuracy: 0.8736 - val_loss: 0.3331 - val_accuracy: 0.8637\n","Epoch 47/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3061 - accuracy: 0.8734 - val_loss: 0.3317 - val_accuracy: 0.8625\n","Epoch 48/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3064 - accuracy: 0.8730 - val_loss: 0.3315 - val_accuracy: 0.8675\n","Epoch 49/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3060 - accuracy: 0.8748 - val_loss: 0.3338 - val_accuracy: 0.8594\n","Epoch 50/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3062 - accuracy: 0.8734 - val_loss: 0.3305 - val_accuracy: 0.8650\n","Epoch 51/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3062 - accuracy: 0.8742 - val_loss: 0.3314 - val_accuracy: 0.8644\n","Epoch 52/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3050 - accuracy: 0.8741 - val_loss: 0.3311 - val_accuracy: 0.8675\n","Epoch 53/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3055 - accuracy: 0.8744 - val_loss: 0.3303 - val_accuracy: 0.8644\n","Epoch 54/100\n","200/200 [==============================] - 1s 3ms/step - loss: 0.3049 - accuracy: 0.8756 - val_loss: 0.3327 - val_accuracy: 0.8644\n","Epoch 55/100\n","200/200 [==============================] - 1s 3ms/step - loss: 0.3059 - accuracy: 0.8752 - val_loss: 0.3320 - val_accuracy: 0.8662\n","Epoch 56/100\n","200/200 [==============================] - 1s 3ms/step - loss: 0.3067 - accuracy: 0.8742 - val_loss: 0.3313 - val_accuracy: 0.8681\n","Epoch 57/100\n","200/200 [==============================] - 1s 3ms/step - loss: 0.3055 - accuracy: 0.8734 - val_loss: 0.3303 - val_accuracy: 0.8644\n","Epoch 58/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3049 - accuracy: 0.8747 - val_loss: 0.3326 - val_accuracy: 0.8650\n","Epoch 59/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3055 - accuracy: 0.8753 - val_loss: 0.3321 - val_accuracy: 0.8669\n","Epoch 60/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3057 - accuracy: 0.8753 - val_loss: 0.3319 - val_accuracy: 0.8650\n","Epoch 61/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3048 - accuracy: 0.8733 - val_loss: 0.3306 - val_accuracy: 0.8662\n","Epoch 62/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3058 - accuracy: 0.8737 - val_loss: 0.3314 - val_accuracy: 0.8662\n","Epoch 63/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3051 - accuracy: 0.8752 - val_loss: 0.3318 - val_accuracy: 0.8637\n","Epoch 64/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3047 - accuracy: 0.8737 - val_loss: 0.3336 - val_accuracy: 0.8650\n","Epoch 65/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3054 - accuracy: 0.8745 - val_loss: 0.3300 - val_accuracy: 0.8669\n","Epoch 66/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3049 - accuracy: 0.8744 - val_loss: 0.3352 - val_accuracy: 0.8631\n","Epoch 67/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3050 - accuracy: 0.8730 - val_loss: 0.3326 - val_accuracy: 0.8650\n","Epoch 68/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3049 - accuracy: 0.8725 - val_loss: 0.3359 - val_accuracy: 0.8625\n","Epoch 69/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3054 - accuracy: 0.8734 - val_loss: 0.3328 - val_accuracy: 0.8619\n","Epoch 70/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3049 - accuracy: 0.8742 - val_loss: 0.3337 - val_accuracy: 0.8631\n","Epoch 71/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3052 - accuracy: 0.8741 - val_loss: 0.3314 - val_accuracy: 0.8681\n","Epoch 72/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3048 - accuracy: 0.8739 - val_loss: 0.3314 - val_accuracy: 0.8662\n","Epoch 73/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3049 - accuracy: 0.8748 - val_loss: 0.3328 - val_accuracy: 0.8637\n","Epoch 74/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3060 - accuracy: 0.8739 - val_loss: 0.3334 - val_accuracy: 0.8644\n","Epoch 75/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3056 - accuracy: 0.8739 - val_loss: 0.3314 - val_accuracy: 0.8650\n","Epoch 76/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3050 - accuracy: 0.8750 - val_loss: 0.3335 - val_accuracy: 0.8644\n","Epoch 77/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3047 - accuracy: 0.8756 - val_loss: 0.3328 - val_accuracy: 0.8669\n","Epoch 78/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3047 - accuracy: 0.8731 - val_loss: 0.3329 - val_accuracy: 0.8656\n","Epoch 79/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3049 - accuracy: 0.8730 - val_loss: 0.3336 - val_accuracy: 0.8637\n","Epoch 80/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3053 - accuracy: 0.8748 - val_loss: 0.3325 - val_accuracy: 0.8675\n","Epoch 81/100\n","200/200 [==============================] - 1s 3ms/step - loss: 0.3044 - accuracy: 0.8755 - val_loss: 0.3307 - val_accuracy: 0.8725\n","Epoch 82/100\n","200/200 [==============================] - 1s 3ms/step - loss: 0.3053 - accuracy: 0.8727 - val_loss: 0.3322 - val_accuracy: 0.8681\n","Epoch 83/100\n","200/200 [==============================] - 1s 4ms/step - loss: 0.3048 - accuracy: 0.8747 - val_loss: 0.3334 - val_accuracy: 0.8656\n","Epoch 84/100\n","200/200 [==============================] - 1s 4ms/step - loss: 0.3055 - accuracy: 0.8742 - val_loss: 0.3340 - val_accuracy: 0.8637\n","Epoch 85/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3046 - accuracy: 0.8731 - val_loss: 0.3346 - val_accuracy: 0.8662\n","Epoch 86/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3047 - accuracy: 0.8744 - val_loss: 0.3330 - val_accuracy: 0.8650\n","Epoch 87/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3048 - accuracy: 0.8725 - val_loss: 0.3316 - val_accuracy: 0.8644\n","Epoch 88/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3053 - accuracy: 0.8761 - val_loss: 0.3332 - val_accuracy: 0.8656\n","Epoch 89/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3047 - accuracy: 0.8764 - val_loss: 0.3351 - val_accuracy: 0.8619\n","Epoch 90/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3045 - accuracy: 0.8741 - val_loss: 0.3371 - val_accuracy: 0.8619\n","Epoch 91/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3048 - accuracy: 0.8739 - val_loss: 0.3358 - val_accuracy: 0.8644\n","Epoch 92/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3051 - accuracy: 0.8741 - val_loss: 0.3347 - val_accuracy: 0.8650\n","Epoch 93/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3044 - accuracy: 0.8744 - val_loss: 0.3328 - val_accuracy: 0.8650\n","Epoch 94/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3048 - accuracy: 0.8739 - val_loss: 0.3321 - val_accuracy: 0.8675\n","Epoch 95/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3049 - accuracy: 0.8725 - val_loss: 0.3330 - val_accuracy: 0.8662\n","Epoch 96/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3048 - accuracy: 0.8741 - val_loss: 0.3337 - val_accuracy: 0.8656\n","Epoch 97/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3048 - accuracy: 0.8750 - val_loss: 0.3341 - val_accuracy: 0.8656\n","Epoch 98/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3043 - accuracy: 0.8747 - val_loss: 0.3347 - val_accuracy: 0.8637\n","Epoch 99/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3046 - accuracy: 0.8748 - val_loss: 0.3317 - val_accuracy: 0.8662\n","Epoch 100/100\n","200/200 [==============================] - 0s 2ms/step - loss: 0.3046 - accuracy: 0.8752 - val_loss: 0.3319 - val_accuracy: 0.8700\n"]}]},{"cell_type":"code","source":["model.layers[0].get_weights()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cmpMJXsgQ7b4","executionInfo":{"status":"ok","timestamp":1708027428073,"user_tz":-360,"elapsed":24,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"2feb9216-b83e-4ef8-997f-c0cd1de97c82"},"execution_count":69,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[array([[-0.03157964,  0.08670409, -0.03693227, -0.05717873,  0.18284434,\n","          0.18024799,  0.20803611,  0.39030442,  0.63198936, -0.08745158,\n","         -0.02813077],\n","        [-0.20559177,  0.30033022,  0.577788  ,  0.05636223, -0.21183422,\n","         -0.76511097,  0.5060275 , -0.8388652 ,  0.03744861,  1.748802  ,\n","          0.0586752 ],\n","        [-0.0469716 ,  0.06970119,  0.13148543, -0.18622306,  0.56204873,\n","         -0.29753706,  0.20409568,  0.06420055,  0.32441023, -0.10627814,\n","         -0.03965632],\n","        [ 0.02514588, -0.6317036 , -0.51953965,  0.93243647, -0.8871236 ,\n","         -0.55003905,  0.7669367 , -0.35825205, -0.5485166 ,  0.06016213,\n","          2.0839548 ],\n","        [-0.01204561,  1.3906883 , -0.39014018, -0.8142491 , -0.12699695,\n","          0.10506871,  0.9409345 ,  0.646422  , -0.09115965, -0.39624447,\n","         -0.48033607],\n","        [-0.44163486,  0.56925064, -0.21832061,  0.23597094, -0.0577776 ,\n","          0.2690601 , -0.5780335 , -0.6144185 , -0.2069868 ,  0.05779589,\n","          0.03168289],\n","        [-0.79080254, -0.04398401,  0.84801143, -0.40387964,  0.03765642,\n","         -0.22433107, -0.20686147, -0.12820071, -0.12753597,  0.04781236,\n","          0.07703122],\n","        [-0.22667274,  0.10664122,  0.1528257 ,  0.5960158 , -0.09061897,\n","          0.20410387,  0.21275622,  0.3344198 , -0.02077523,  0.22456637,\n","          0.30221668],\n","        [-0.57531047,  0.36253822, -0.07367518,  0.21249716,  0.36590415,\n","          0.344479  , -0.35742956,  0.6657547 , -0.5542885 , -0.15096273,\n","         -1.3440324 ],\n","        [-0.03303744,  0.06121648,  0.12109666,  0.02564503,  0.80765927,\n","         -0.8183347 ,  0.40512085,  0.43268687, -0.3883674 , -0.07320651,\n","         -0.09180879],\n","        [ 0.02609718, -0.11533321,  0.3301823 , -0.21957241,  0.2618649 ,\n","          0.17616755, -0.07972588, -0.24893416, -0.24227405, -0.02767957,\n","          0.00679356]], dtype=float32),\n"," array([ 0.6658155 ,  0.649993  ,  0.7481897 ,  0.51191187,  0.67160296,\n","         1.198709  , -0.5734469 ,  0.13577442,  0.3341449 , -0.19648466,\n","         0.34585503], dtype=float32)]"]},"metadata":{},"execution_count":69}]},{"cell_type":"code","source":["y_log = model.predict(X_test_scaled)\n","y_log"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"W9ZkUhbeRs-3","executionInfo":{"status":"ok","timestamp":1708027438716,"user_tz":-360,"elapsed":6,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"0a2a57d0-2c4a-449d-d932-5f124c8218bf"},"execution_count":70,"outputs":[{"output_type":"stream","name":"stdout","text":["63/63 [==============================] - 0s 1ms/step\n"]},{"output_type":"execute_result","data":{"text/plain":["array([[0.03579463],\n","       [0.1263316 ],\n","       [0.07397223],\n","       ...,\n","       [0.010199  ],\n","       [0.09487597],\n","       [0.69203824]], dtype=float32)"]},"metadata":{},"execution_count":70}]},{"cell_type":"code","source":["y_pred = np.where(y_log>0.5,1,0)\n","y_pred"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DWsPoTpqR7oI","executionInfo":{"status":"ok","timestamp":1708027443866,"user_tz":-360,"elapsed":511,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"7b909363-0bae-467b-a892-21efc883f989"},"execution_count":71,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0],\n","       [0],\n","       [0],\n","       ...,\n","       [0],\n","       [0],\n","       [1]])"]},"metadata":{},"execution_count":71}]},{"cell_type":"code","source":["from sklearn.metrics import accuracy_score\n","accuracy_score(y_test, y_pred)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Z9MFbG1JS2Zq","executionInfo":{"status":"ok","timestamp":1708027449467,"user_tz":-360,"elapsed":10,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"3ba08bce-b2c6-4da0-da7a-21c1a5a3b8ec"},"execution_count":72,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.859"]},"metadata":{},"execution_count":72}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt"],"metadata":{"id":"uI0A6YeJTwB5","executionInfo":{"status":"ok","timestamp":1708027489033,"user_tz":-360,"elapsed":722,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}}},"execution_count":74,"outputs":[]},{"cell_type":"code","source":["plt.plot(history.history['loss'])\n","plt.plot(history.history['val_loss'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":447},"id":"hdC2cOxiXyL7","executionInfo":{"status":"ok","timestamp":1708027763060,"user_tz":-360,"elapsed":1134,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"c504782b-acc3-4a28-d82b-734922f516ac"},"execution_count":79,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[<matplotlib.lines.Line2D at 0x7f46400ae6b0>]"]},"metadata":{},"execution_count":79},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["plt.plot(history.history['accuracy'])\n","plt.plot(history.history['val_accuracy'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":447},"id":"APitOS84YESR","executionInfo":{"status":"ok","timestamp":1708027920994,"user_tz":-360,"elapsed":964,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"d0add5b7-c028-4d18-8039-4e662bad8384"},"execution_count":82,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[<matplotlib.lines.Line2D at 0x7f46403821a0>]"]},"metadata":{},"execution_count":82},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]}]}